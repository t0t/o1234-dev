{"version":3,"file":"index-B_W2mw1d.js","sources":["../../frontend/src/main.js"],"sourcesContent":["import './styles.css'\nimport 'tailwindcss/tailwind.css'\n\n// Initialize the application\ndocument.addEventListener('DOMContentLoaded', () => {\n    const questionInput = document.getElementById('question')\n    const askButton = document.getElementById('ask-button')\n    const responseContainer = document.getElementById('response')\n    const loadingIndicator = document.getElementById('loading')\n    const charCount = document.getElementById('char-count')\n    const MAX_LENGTH = 280\n\n    // Función para validar y actualizar la UI\n    const validateInput = () => {\n        const question = questionInput.value.trim()\n        const length = question.length\n        \n        // Actualizar contador de caracteres\n        charCount.textContent = `${length}/${MAX_LENGTH}`\n        charCount.classList.toggle('hidden', length === 0)\n        \n        // Habilitar/deshabilitar botón\n        askButton.disabled = length === 0 || length > MAX_LENGTH\n        \n        // Actualizar clases del input\n        questionInput.classList.toggle('border-red-300', length > MAX_LENGTH)\n        questionInput.classList.toggle('focus:ring-red-500', length > MAX_LENGTH)\n        questionInput.classList.toggle('focus:border-red-500', length > MAX_LENGTH)\n        \n        return length > 0 && length <= MAX_LENGTH\n    }\n\n    // Función para manejar la pregunta\n    const handleQuestion = async () => {\n        if (!validateInput()) return\n\n        const question = questionInput.value.trim()\n        \n        // Deshabilitar input y botón durante la petición\n        questionInput.disabled = true\n        askButton.disabled = true\n        \n        // Añadir clase de procesando al botón\n        askButton.classList.add('processing')\n        \n        try {\n            await askQuestion(question)\n        } finally {\n            // Restaurar estado\n            questionInput.disabled = false\n            askButton.disabled = false\n            askButton.classList.remove('processing')\n            validateInput()\n            questionInput.focus()\n        }\n    }\n\n    // Event listeners\n    questionInput.addEventListener('input', validateInput)\n    askButton.addEventListener('click', handleQuestion)\n    questionInput.addEventListener('keypress', (e) => {\n        if (e.key === 'Enter' && validateInput()) {\n            e.preventDefault()\n            handleQuestion()\n        }\n    })\n\n    // Añadir icono al botón\n    askButton.innerHTML = `\n        <span class=\"mr-2\">Preguntar</span>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5 transition-transform\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z\" clip-rule=\"evenodd\" />\n        </svg>\n    `\n\n    // Preguntas frecuentes predefinidas\n    const quickQuestions = [\n        '¿Qué es O1234?',\n        '¿Qué significa el número 0?',\n        '¿Qué significa el número 1?',\n        '¿Para qué sirve O1234?'\n    ];\n\n    // Añadir las preguntas rápidas al DOM\n    const container = document.createElement('div');\n    container.id = 'quick-questions';\n    container.className = 'mt-6 grid grid-cols-1 gap-3 sm:grid-cols-2';\n    \n    quickQuestions.forEach(question => {\n        const button = document.createElement('button');\n        button.className = 'inline-flex items-center px-4 py-2 border border-stone-600 shadow-sm text-sm font-medium rounded-md text-stone-300 bg-stone-800 hover:bg-stone-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-all duration-200 hover:shadow';\n        button.textContent = question;\n        button.onclick = () => {\n            questionInput.value = question;\n            validateInput();\n            handleQuestion();\n        };\n        container.appendChild(button);\n    });\n\n    // Insertar después del botón de preguntar\n    const quickQuestionsContainer = document.getElementById('quick-questions');\n    quickQuestionsContainer.appendChild(container);\n\n    // Inicializar estado del botón\n    validateInput();\n})\n\n// Configuración de la API\nconst API_URL = window.location.hostname === 'localhost' \n    ? 'http://localhost:8005'  // URL de desarrollo\n    : 'https://o1234-dev.fly.dev';  // URL de producción\n\n// Función principal para hacer preguntas\nasync function askQuestion(question) {\n    const responseContainer = document.getElementById('response')\n    const loadingIndicator = document.getElementById('loading')\n\n    try {\n        // Mostrar indicador de carga\n        loadingIndicator.classList.remove('hidden')\n        responseContainer.innerHTML = ''\n\n        // Hacer la petición al backend\n        const response = await fetch(`${API_URL}/api/ask`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ question })\n        })\n\n        if (!response.ok) {\n            throw new Error('Error en la respuesta del servidor')\n        }\n\n        const data = await response.json()\n\n        // Ocultar indicador de carga\n        loadingIndicator.classList.add('hidden')\n\n        // Formatear la respuesta\n        const formattedResponse = formatResponse(data.response)\n\n        // Mostrar la respuesta con una animación suave\n        const responseElement = document.createElement('div')\n        responseElement.className = 'mt-4 bg-gray-800 rounded-lg p-8 opacity-0 transition-opacity duration-300'\n        responseElement.innerHTML = formattedResponse\n        \n        responseContainer.appendChild(responseElement)\n        // Forzar un reflow para que la animación funcione\n        responseElement.offsetHeight\n        responseElement.classList.remove('opacity-0')\n\n    } catch (error) {\n        // Ocultar indicador de carga\n        loadingIndicator.classList.add('hidden')\n\n        // Mostrar error con animación suave\n        const errorElement = document.createElement('div')\n        errorElement.className = 'mt-4 bg-red-50 text-red-700 rounded-lg p-4 opacity-0 transition-opacity duration-300'\n        errorElement.innerHTML = `\n            <div class=\"flex items-center\">\n                <svg class=\"h-5 w-5 text-red-400 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                </svg>\n                <p>Error: ${error.message}</p>\n            </div>\n        `\n        \n        responseContainer.appendChild(errorElement)\n        // Forzar un reflow para que la animación funcione\n        errorElement.offsetHeight\n        errorElement.classList.remove('opacity-0')\n    }\n}\n\n// Función para formatear la respuesta\nfunction formatResponse(text) {\n    // Dividir el texto en líneas\n    let lines = text.split('\\n')\n    \n    // Procesar cada línea\n    lines = lines.map(line => {\n        // Detectar y formatear títulos\n        if (line.startsWith('Objetivos principales:')) {\n            return `<h1>${line}</h1>`\n        }\n        if (line.match(/^\\d+\\.\\s+\\*\\*[^*]+\\*\\*/)) {\n            return `<h2>${line.replace(/^\\d+\\.\\s+\\*\\*([^*]+)\\*\\*/, '$1')}</h2>`\n        }\n        \n        // Formatear texto en negrita\n        line = line.replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>')\n        \n        // Formatear listas\n        if (line.startsWith('- ')) {\n            return `<li>${line.substring(2)}</li>`\n        }\n        if (line.match(/^\\d+\\./)) {\n            return `<li>${line}</li>`\n        }\n        \n        // Envolver el resto en párrafos si no está vacío\n        return line.trim() ? `<p>${line}</p>` : ''\n    })\n    \n    // Agrupar elementos de lista\n    let html = ''\n    let inList = false\n    \n    lines.forEach(line => {\n        if (line.startsWith('<li>') && !inList) {\n            html += '<ul>'\n            inList = true\n        } else if (!line.startsWith('<li>') && inList) {\n            html += '</ul>'\n            inList = false\n        }\n        html += line\n    })\n    \n    if (inList) {\n        html += '</ul>'\n    }\n    \n    return html\n}"],"names":["questionInput","askButton","charCount","MAX_LENGTH","validateInput","length","handleQuestion","question","askQuestion","e","quickQuestions","container","button","API_URL","responseContainer","loadingIndicator","response","data","formattedResponse","formatResponse","responseElement","error","errorElement","text","lines","line","html","inList"],"mappings":"ssBAIA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMA,EAAgB,SAAS,eAAe,UAAU,EAClDC,EAAY,SAAS,eAAe,YAAY,EAC5B,SAAS,eAAe,UAAU,EACnC,SAAS,eAAe,SAAS,EAC1D,MAAMC,EAAY,SAAS,eAAe,YAAY,EAChDC,EAAa,IAGbC,EAAgB,IAAM,CAExB,MAAMC,EADWL,EAAc,MAAM,KAAI,EACjB,OAGxB,OAAAE,EAAU,YAAc,GAAGG,CAAM,IAAIF,CAAU,GAC/CD,EAAU,UAAU,OAAO,SAAUG,IAAW,CAAC,EAGjDJ,EAAU,SAAWI,IAAW,GAAKA,EAASF,EAG9CH,EAAc,UAAU,OAAO,iBAAkBK,EAASF,CAAU,EACpEH,EAAc,UAAU,OAAO,qBAAsBK,EAASF,CAAU,EACxEH,EAAc,UAAU,OAAO,uBAAwBK,EAASF,CAAU,EAEnEE,EAAS,GAAKA,GAAUF,CACvC,EAGUG,EAAiB,SAAY,CAC/B,GAAI,CAACF,EAAa,EAAI,OAEtB,MAAMG,EAAWP,EAAc,MAAM,KAAI,EAGzCA,EAAc,SAAW,GACzBC,EAAU,SAAW,GAGrBA,EAAU,UAAU,IAAI,YAAY,EAEpC,GAAI,CACA,MAAMO,EAAYD,CAAQ,CACtC,QAAkB,CAENP,EAAc,SAAW,GACzBC,EAAU,SAAW,GACrBA,EAAU,UAAU,OAAO,YAAY,EACvCG,EAAa,EACbJ,EAAc,MAAK,CAC/B,CACA,EAGIA,EAAc,iBAAiB,QAASI,CAAa,EACrDH,EAAU,iBAAiB,QAASK,CAAc,EAClDN,EAAc,iBAAiB,WAAaS,GAAM,CAC1CA,EAAE,MAAQ,SAAWL,EAAa,IAClCK,EAAE,eAAc,EAChBH,EAAc,EAErB,CAAA,EAGDL,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,MAQtB,MAAMS,EAAiB,CACnB,iBACA,8BACA,8BACA,wBACH,EAGKC,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,GAAK,kBACfA,EAAU,UAAY,6CAEtBD,EAAe,QAAQH,GAAY,CAC/B,MAAMK,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,UAAY,uQACnBA,EAAO,YAAcL,EACrBK,EAAO,QAAU,IAAM,CACnBZ,EAAc,MAAQO,EACtBH,EAAe,EACfE,EAAgB,CACnB,EACDK,EAAU,YAAYC,CAAM,CACpC,CAAK,EAG+B,SAAS,eAAe,iBAAiB,EACjD,YAAYD,CAAS,EAG7CP,EAAe,CACnB,CAAC,EAGD,MAAMS,EAAU,OAAO,SAAS,WAAa,YACvC,wBACA,4BAGN,eAAeL,EAAYD,EAAU,CACjC,MAAMO,EAAoB,SAAS,eAAe,UAAU,EACtDC,EAAmB,SAAS,eAAe,SAAS,EAE1D,GAAI,CAEAA,EAAiB,UAAU,OAAO,QAAQ,EAC1CD,EAAkB,UAAY,GAG9B,MAAME,EAAW,MAAM,MAAM,GAAGH,CAAO,WAAY,CAC/C,OAAQ,OACR,QAAS,CACL,eAAgB,kBACnB,EACD,KAAM,KAAK,UAAU,CAAE,SAAAN,CAAU,CAAA,CACpC,CAAA,EAED,GAAI,CAACS,EAAS,GACV,MAAM,IAAI,MAAM,oCAAoC,EAGxD,MAAMC,EAAO,MAAMD,EAAS,KAAI,EAGhCD,EAAiB,UAAU,IAAI,QAAQ,EAGvC,MAAMG,EAAoBC,EAAeF,EAAK,QAAQ,EAGhDG,EAAkB,SAAS,cAAc,KAAK,EACpDA,EAAgB,UAAY,4EAC5BA,EAAgB,UAAYF,EAE5BJ,EAAkB,YAAYM,CAAe,EAE7CA,EAAgB,aAChBA,EAAgB,UAAU,OAAO,WAAW,CAE/C,OAAQC,EAAO,CAEZN,EAAiB,UAAU,IAAI,QAAQ,EAGvC,MAAMO,EAAe,SAAS,cAAc,KAAK,EACjDA,EAAa,UAAY,uFACzBA,EAAa,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,4BAKLD,EAAM,OAAO;AAAA;AAAA,UAIjCP,EAAkB,YAAYQ,CAAY,EAE1CA,EAAa,aACbA,EAAa,UAAU,OAAO,WAAW,CACjD,CACA,CAGA,SAASH,EAAeI,EAAM,CAE1B,IAAIC,EAAQD,EAAK,MAAM;AAAA,CAAI,EAG3BC,EAAQA,EAAM,IAAIC,GAEVA,EAAK,WAAW,wBAAwB,EACjC,OAAOA,CAAI,QAElBA,EAAK,MAAM,wBAAwB,EAC5B,OAAOA,EAAK,QAAQ,2BAA4B,IAAI,CAAC,SAIhEA,EAAOA,EAAK,QAAQ,mBAAoB,qBAAqB,EAGzDA,EAAK,WAAW,IAAI,EACb,OAAOA,EAAK,UAAU,CAAC,CAAC,QAE/BA,EAAK,MAAM,QAAQ,EACZ,OAAOA,CAAI,QAIfA,EAAK,KAAM,EAAG,MAAMA,CAAI,OAAS,GAC3C,EAGD,IAAIC,EAAO,GACPC,EAAS,GAEb,OAAAH,EAAM,QAAQC,GAAQ,CACdA,EAAK,WAAW,MAAM,GAAK,CAACE,GAC5BD,GAAQ,OACRC,EAAS,IACF,CAACF,EAAK,WAAW,MAAM,GAAKE,IACnCD,GAAQ,QACRC,EAAS,IAEbD,GAAQD,CACX,CAAA,EAEGE,IACAD,GAAQ,SAGLA,CACX"}